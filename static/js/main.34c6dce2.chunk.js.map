{"version":3,"sources":["Pokecard.js","Pokedex.js","Pokegame.js","App.js","reportWebVitals.js","index.js"],"names":["Pokecard","number","imgSrc","this","props","id","slice","className","src","alt","name","type","exp","Component","Pokedex","title","isWinner","pokemon","map","p","base_experience","Pokegame","hand1","hand2","length","randIdx","Math","floor","random","randPokemon","splice","push","exp1","reduce","exp2","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAMMA,E,4JAEF,WACI,IALUC,EAKNC,EAAM,UAPD,8DAOC,QALAD,EAK4BE,KAAKC,MAAMC,KALjB,IAAM,YAAKJ,GAASK,OAAO,GAAIL,EAKrD,QACV,OAAO,sBAAKM,UAAU,WAAf,UACP,qBAAKA,UAAU,2BAAf,SACA,qBAAKA,UAAU,iBAAiBC,IAAKN,EAAQO,IAAKN,KAAKC,MAAMM,SAC7D,oBAAIH,UAAU,iBAAd,SAAgCJ,KAAKC,MAAMM,OAC3C,sBAAKH,UAAU,gBAAf,mBAAsCJ,KAAKC,MAAMO,KAAjD,OACA,sBAAKJ,UAAU,gBAAf,kBAAqCJ,KAAKC,MAAMQ,c,GATjCC,aAcRb,IChBTc,G,kKAEF,WAEI,IAAIC,EAOJ,OALIA,EADAZ,KAAKC,MAAMY,SACH,oBAAIT,UAAU,iBAAd,qBAEA,oBAAIA,UAAU,gBAAd,oBAIR,sBAAKA,UAAU,UAAf,UACCQ,EACD,4CAAeZ,KAAKC,MAAMQ,IAA1B,OACA,qBAAKL,UAAU,gBAAf,SACCJ,KAAKC,MAAMa,QAAQC,KAAI,SAACC,GACxB,OAAO,cAAC,EAAD,CAAUd,GAAIc,EAAEd,GAAIK,KAAMS,EAAET,KAAMC,KAAMQ,EAAER,KAAMC,IAAKO,EAAEC,8B,GAjBrDP,cAyBPC,IC1BTO,E,4JAaF,WAGI,IAFA,IAAIC,EAAQ,GACRC,EAAK,YAAOpB,KAAKC,MAAMa,SACpBK,EAAME,OAASD,EAAMC,QAAQ,CAChC,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMC,QAC3CK,EAAcN,EAAMO,OAAOL,EAAS,GAAG,GAC3CH,EAAMS,KAAKF,GAEf,IAAIG,EAAOV,EAAMW,QAAO,SAACrB,EAAKK,GAAN,OAAkBL,EAAMK,EAAQG,kBAAiB,GACrEc,EAAOX,EAAMU,QAAO,SAACrB,EAAKK,GAAN,OAAkBL,EAAMK,EAAQG,kBAAiB,GACzE,OACI,gCACI,cAAC,EAAD,CAASH,QAASK,EAAOV,IAAKoB,EAAMhB,SAAUgB,EAAOE,IACrD,cAAC,EAAD,CAASjB,QAASM,EAAOX,IAAKsB,EAAOlB,SAAUkB,EAAOF,W,GA1B/CnB,aAAjBQ,EACKc,aAAe,CAClBlB,QAAU,CACN,CAACZ,GAAI,EAAGK,KAAM,aAAcC,KAAM,OAAQS,gBAAiB,IAC3D,CAACf,GAAI,EAAGK,KAAM,WAAYC,KAAM,QAASS,gBAAiB,IAC1D,CAACf,GAAI,GAAIK,KAAM,UAAWC,KAAM,MAAOS,gBAAiB,IACxD,CAACf,GAAI,GAAIK,KAAM,aAAcC,KAAM,SAAUS,gBAAiB,KAC9D,CAACf,GAAI,GAAIK,KAAM,UAAWC,KAAM,WAAYS,gBAAiB,KAC7D,CAACf,GAAI,GAAIK,KAAM,aAAcC,KAAM,SAAUS,gBAAiB,IAC9D,CAACf,GAAI,GAAIK,KAAM,SAAUC,KAAM,SAAUS,gBAAiB,KAC1D,CAACf,GAAI,IAAKK,KAAM,QAASC,KAAM,SAAUS,gBAAiB,MAsBvDC,Q,MCxBAe,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,OCMS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.34c6dce2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Pokecard.css'\nconst POKE_API = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/'\n\nlet padToThree = (number) => (number <= 999 ? `00${number}`.slice(-3): number) \n\nclass Pokecard extends Component {\n  \n    render() {\n        let imgSrc = `${POKE_API}${padToThree(this.props.id)}.png`;\n        return <div className='Pokecard'>\n        <div className=\"Pokecard-image-container\">\n        <img className=\"Pokecard-image\" src={imgSrc} alt={this.props.name}/></div>\n        <h1 className=\"Pokecard-title\">{this.props.name}</h1>\n        <div className=\"Pokecard-data\">Type: {this.props.type} </div>\n        <div className=\"Pokecard-data\">EXP: {this.props.exp}</div>\n        </div>;\n    }\n}\n\nexport default Pokecard;","import React, { Component } from 'react'\nimport Pokecard from './Pokecard';\nimport './Pokedex.css'\n\nclass Pokedex extends Component {\n  \n    render() {\n\n        let title;\n        if (this.props.isWinner) {\n            title = <h1 className=\"Pokedex-winner\"> Winner</h1>\n        } else {\n            title = <h1 className=\"Pokedex-loser\"> Loser</h1>\n        }\n\n        return (\n            <div className=\"Pokedex\">\n            {title}\n            <p>Total EXP: {this.props.exp} </p>\n            <div className=\"Pokedex-cards\">\n            {this.props.pokemon.map((p) => {\n             return <Pokecard id={p.id} name={p.name} type={p.type} exp={p.base_experience}/>\n            })}\n            </div>\n            </div>\n        )\n\n    }\n}\nexport default Pokedex;","import React, { Component } from 'react';\nimport Pokedex from './Pokedex';\n\nclass Pokegame extends Component {\n    static defaultProps = {\n        pokemon : [\n            {id: 4, name: 'Charmander', type: 'fire', base_experience: 62},\n            {id: 7, name: 'Squirtle', type: 'water', base_experience: 63},\n            {id: 11, name: 'Metapod', type: 'bug', base_experience: 72},\n            {id: 12, name: 'Butterfree', type: 'flying', base_experience: 178},\n            {id: 25, name: 'Pikachu', type: 'electric', base_experience: 112},\n            {id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95},\n            {id: 94, name: 'Gengar', type: 'poison', base_experience: 225},\n            {id: 133, name: 'Eevee', type: 'normal', base_experience: 65}\n          ]\n    };\n    render() {\n        let hand1 = []\n        let hand2 = [...this.props.pokemon]\n        while (hand1.length < hand2.length) {\n            let randIdx = Math.floor(Math.random() * hand2.length)\n            let randPokemon = hand2.splice(randIdx, 1)[0];\n            hand1.push(randPokemon);\n        }\n        let exp1 = hand1.reduce((exp, pokemon) => exp + pokemon.base_experience, 0 );\n        let exp2 = hand2.reduce((exp, pokemon) => exp + pokemon.base_experience, 0 );\n        return (\n            <div>\n                <Pokedex pokemon={hand1} exp={exp1} isWinner={exp1 > exp2}/>\n                <Pokedex pokemon={hand2} exp={exp2}  isWinner={exp2 > exp1}/>\n            </div>\n        )\n    }\n}\n\nexport default Pokegame;","import Pokegame from './Pokegame';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Pokegame />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}